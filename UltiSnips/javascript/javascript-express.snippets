snippet express_restapi "express REST api"
module.exports.get = (req, res) => {
  return res.json({ success: 'get' })
}

module.exports.del = (req, res) => {
  return res.json({ success: 'del' })
}

module.exports.put = (req, res) => {
  return res.json({ success: 'put' })
}

module.exports.post = (req, res) => {
  return res.json({ success: 'post' })
}
endsnippet

snippet express_draft "express draft"

endsnippet

snippet logger_draft "winston logger draft"
const winston = require('winston')
const tsFormat = () => (new Date()).toLocaleString()
const logFile = `${__dirname}/.log`

function buildLoggerConfig (config) {
  const loggerConfig = Object.assign({}, config)
  loggerConfig.transports = []
  if (process.env.NODE_ENV === 'production') {
    loggerConfig.transports.push(new winston.transports['File'](config.transports.File))
  } else {
    loggerConfig.transports.push(new winston.transports['Console'](config.transports.Console))
  }
  return loggerConfig
}

const loggerConfig = {
  transports: {
    Console: {
      level: 'debug',
      handleExceptions: true,
      json: false,
      colorize: true,
      timestamp: tsFormat
    },
    File: {
      filename: logFile,
      timestamp: tsFormat,
      json: false,
      level: 'info'
    }
  },
  exitOnError: false
}

module.exports = new winston.Logger(buildLoggerConfig(loggerConfig))
endsnippet
